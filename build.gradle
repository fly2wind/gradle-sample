/**
 * Configures the build script classpath for this project.
 */
buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
		maven { url 'http://repo.thinkjoy.local/content/groups/public/' }
	}
	dependencies {
		classpath 'cn.thinkjoy.gradle.plugins:gradle-gitflow-plugin:1.0.1'
		classpath 'org.hibernate.build.gradle:gradle-maven-publish-auth:2.0.1'
	}
}

allprojects {
	group = 'cn.thinkjoy.sample'
	version = '1.0.0'

	apply plugin: 'java'
	apply plugin: 'eclipse'
	apply plugin: 'maven-publish'
	apply plugin: 'maven-publish-auth'

	configurations {
		provided
		compile.extendsFrom provided
		all*.exclude group: 'log4j', module: 'log4j'
		all*.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
		all*.exclude group: 'org.springframework', module: 'spring'
		all*.exclude group: 'asm', module: 'asm'
		all*.exclude group: 'commons-logging', module: 'commons-logging'
	}

	repositories {
		mavenLocal()
		mavenCentral()
		//maven { url 'http://repo.thinkjoy.local/content/groups/public/' }
	}

	publishing {
		publications {
			mavenJava(MavenPublication) { from components.java }
		}

		repositories {
			maven {
				name = 'thinkjoy'
				url "http://repo.thinkjoy.local/content/repositories/${project.version.endsWith('-SNAPSHOT') ? 'snapshots' : 'releases'}"
			}
		}
	}

	task sourcesJar(type: Jar, dependsOn:classes) {
		classifier 'sources'
		from sourceSets.main.allSource
	}

	task javadocJar(type: Jar, dependsOn:javadoc) {
		classifier 'javadoc'
		from javadoc.destinationDir
	}

	artifacts {
		archives sourcesJar
		archives javadocJar
	}
}


apply plugin: 'application'

mainClassName = "cn.thinkjoy.sample.BootStartup"

dependencies {
	compile project(':sample-services')
}

tasks.run {
	classpath += files('src/dist/conf')
}

tasks.startScripts {
	doLast {
		def scriptShellFile = file "${outputDir}/${applicationName}"
		def scriptBatchFile = file "${outputDir}/${applicationName}.bat"

		scriptShellFile.text = scriptShellFile.text.replace('CLASSPATH=$APP_HOME/lib', 'CLASSPATH=$APP_HOME/conf/:$APP_HOME/lib')
		scriptBatchFile.text = scriptBatchFile.text.replace('CLASSPATH=%APP_HOME%\\lib', 'CLASSPATH=%APP_HOME%\\conf\\;%APP_HOME%\\lib')
	}
}

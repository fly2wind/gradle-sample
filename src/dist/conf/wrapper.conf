#encoding=UTF-8
#********************************************************************
# Wrapper Working Dir
#********************************************************************
wrapper.working.dir=../../

#********************************************************************
# Wrapper Localization
#********************************************************************
#wrapper.lang=en_US
#wrapper.lang.folder=../lang

#********************************************************************
# Wrapper Java Properties
#********************************************************************
# Java Application.
wrapper.java.command=java

# Java Log level.
#wrapper.java.command.loglevel=INFO

# Java Main class.
wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp

# Java Classpath (include wrapper.jar)  Add class path elements as
wrapper.java.classpath.1=./lib/wrapper.jar
wrapper.java.classpath.2=./lib/*.jar
wrapper.java.classpath.3=./conf

# Java Library Path (location of Wrapper.DLL or libwrapper.so)
wrapper.java.library.path.1=./lib

# Java Bits.  On applicable platforms, tells the JVM to run in 32 or 64-bit mode.
wrapper.java.additional.auto_bits=TRUE

# Java Additional Parameters
wrapper.java.additional.1=-server 
wrapper.java.additional.2=-Djava.awt.headless=true
wrapper.java.additional.3=-Djava.net.preferIPv4Stack=true
wrapper.java.additional.4=-XX:+DoEscapeAnalysis 
wrapper.java.additional.5=-XX:+UseParallelGC
wrapper.java.additional.6=-XX:+UseParallelOldGC
wrapper.java.additional.7=-Xss8192K 
wrapper.java.additional.8=-XX:PermSize=256m 
wrapper.java.additional.9=-XX:MaxPermSize=512m

# Initial Java Heap Size (in MB)
wrapper.java.initmemory=4096

# Maximum Java Heap Size (in MB)
wrapper.java.maxmemory=4096

# Application parameters.  Add parameters as needed starting from 1
wrapper.app.parameter.1=com.alibaba.dubbo.container.Main

#********************************************************************
# Wrapper Logging Properties
#********************************************************************
# Enables Debug output from the Wrapper.
wrapper.debug=FALSE

# Format of output for the console.
wrapper.console.format=M
wrapper.console.loglevel=INFO

# Log file to use for wrapper output logging.
wrapper.logfile.format=M
wrapper.logfile.loglevel=INFO
wrapper.logfile=./logs/wrapper-YYYYMMDD.log
wrapper.logfile.purge.pattern=./logs/wrapper-*.log
wrapper.logfile.purge.sort=NAMES_DEC
wrapper.logfile.rollmode=DATE
wrapper.logfile.maxsize=1000m
wrapper.logfile.maxfiles=10

#********************************************************************
# Wrapper General Properties
#********************************************************************
# Allow for the use of non-contiguous numbered properties
wrapper.ignore_sequence_gaps=TRUE

# Do not start if the pid file already exists.
wrapper.pidfile.strict=TRUE

# Title to use when running as a console
wrapper.console.title=Wrapper Sample Application

#********************************************************************
# Wrapper JVM Checks
#********************************************************************
# Out Of Memory detection.
wrapper.filter.trigger.1000=[Loaded java.lang.OutOfMemoryError
wrapper.filter.action.1000=NONE
# (Simple match)
wrapper.filter.trigger.1001=java.lang.OutOfMemoryError
wrapper.filter.action.1001=DUMP,RESTART

#********************************************************************
# Wrapper Windows NT/2000/XP Service Properties
#********************************************************************
# WARNING - Do not modify any of these properties when an application
#  using this configuration file has been installed as a service.
#  Please uninstall the service before modifying this section.  The
#  service can then be reinstalled.

# Name of the service
wrapper.name=testwrapper

# Display name of the service
wrapper.displayname=Test Wrapper Sample Application

# Description of the service
wrapper.description=Test Wrapper Sample Application Description

# Service dependencies.  Add dependencies as needed starting from 1
wrapper.ntservice.dependency.1=

# Mode in which the service is installed.  AUTO_START, DELAY_START or DEMAND_START
wrapper.ntservice.starttype=AUTO_START

# Allow the service to interact with the desktop.
wrapper.ntservice.interactive=false

